
Signal_Shift_and_Reverse_Examples
Practice on signal plotting, time shifting, and time reversal
import numpy as np
import matplotlib.pyplot as plt
Example 3 - Continuous signal with time shift

t = np.linspace(-2, 3, 500)
def rect(t):
    return np.where(np.abs(t) <= 0.5, 1, 0)

x_t = rect(t)
y1_t = rect(t + 0.5)
y2_t = rect(t - 2)

plt.figure(figsize=(10,6))
plt.subplot(3,1,1)
plt.plot(t, x_t)
plt.title('x(t) = Î (t)')
plt.grid(True)

plt.subplot(3,1,2)
plt.plot(t, y1_t)
plt.title('y1(t) = x(t + 0.5)')
plt.grid(True)

plt.subplot(3,1,3)
plt.plot(t, y2_t)
plt.title('y2(t) = x(t - 2)')
plt.grid(True)

plt.tight_layout()
plt.show()
     
Example 4 - Discrete signal with time shift

n = np.arange(-2, 3)
x_n = np.array([-1, 0, 1, 1, 0])

# Time shifts
y1_n = np.roll(x_n, -3)
y2_n = np.roll(x_n, 1)

plt.figure(figsize=(8,6))
plt.subplot(3,1,1)
plt.stem(n, x_n, use_line_collection=True)
plt.title('x[n]')

plt.subplot(3,1,2)
plt.stem(n, y1_n, use_line_collection=True)
plt.title('y1[n] = x[n + 3]')

plt.subplot(3,1,3)
plt.stem(n, y2_n, use_line_collection=True)
plt.title('y2[n] = x[n - 1]')

plt.tight_layout()
plt.show()
     
Example 5 & 6 - Time reversal (continuous and discrete)

# Continuous example
t = np.linspace(-2, 2, 400)
x_t = np.maximum(0, 1 - np.abs(t))
y_t = np.maximum(0, 1 - np.abs(-t))

plt.figure(figsize=(8,4))
plt.plot(t, x_t, label='x(t)')
plt.plot(t, y_t, '--', label='y(t)=x(-t)')
plt.legend()
plt.title('Time Reversal - Continuous')
plt.grid(True)
plt.show()

# Discrete example
n = np.array([-2, -1, 0, 1, 2])
x_n = np.array([-1, 0, 1, 2, 1])
y_n = x_n[::-1]

plt.figure(figsize=(8,4))
plt.stem(n, x_n, linefmt='b-', markerfmt='bo', basefmt=' ')
plt.stem(n, y_n, linefmt='r--', markerfmt='ro', basefmt=' ')
plt.title('Time Reversal - Discrete: y[n]=x[-n]')
plt.grid(True)
plt.show()
     
Example 7 - Another discrete time reversal example

n = np.array([-2, -1, 0, 1, 2])
x_n = np.array([1, 0, 1, 1, 2])
y_n = x_n[::-1]

plt.figure(figsize=(8,4))
plt.subplot(2,1,1)
plt.stem(n, x_n, use_line_collection=True)
plt.title('x[n]')

plt.subplot(2,1,2)
