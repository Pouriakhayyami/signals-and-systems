Signal_Transformations_Examples
Time shift, scaling, and combination examples (discrete and continuous)

import numpy as np
import matplotlib.pyplot as plt
     
Discrete-Time Examples

# Base discrete signal
n = np.arange(-2, 3)
x_n = np.array([1, 2, 0, -1, 1])

# 1) x[n - 2]
y1 = np.roll(x_n, 2)

# 2) x[3/2 n + 3] (approximate discrete scaling)
n2 = np.linspace(-2, 2, len(x_n))
scaled_n = (3/2) * n2 + 3

# 3) x[n] + x[2n] - 3 (simple example)
x_2n = np.interp(2*n, n, x_n, left=0, right=0)
y3 = x_n + x_2n - 3

plt.figure(figsize=(10,8))

plt.subplot(3,1,1)
plt.stem(n, y1, use_line_collection=True)
plt.title('1) y[n] = x[n - 2]')

plt.subplot(3,1,2)
plt.plot(scaled_n, np.interp(scaled_n, n, x_n, left=0, right=0))
plt.title('2) y[n] = x[1.5n + 3] (approximation)')

plt.subplot(3,1,3)
plt.stem(n, y3, use_line_collection=True)
plt.title('3) y[n] = x[n] + x[2n] - 3')

plt.tight_layout()
plt.show()
     
Continuous-Time Examples

# Define continuous signal
t = np.linspace(-5, 5, 1000)
x_t = np.exp(-np.abs(t))

# 4) x(3t - 1/2)
y4 = np.exp(-np.abs(3*t - 0.5))

# 5) x(0.5t + 3)
y5 = np.exp(-np.abs(0.5*t + 3))

# 6) x(t - 2) - t
y6 = np.exp(-np.abs(t - 2)) - t

plt.figure(figsize=(10,10))

plt.subplot(3,1,1)
plt.plot(t, y4)
plt.title('4) y(t) = x(3t - 1/2)')
plt.grid(True)

plt.subplot(3,1,2)
plt.plot(t, y5)
plt.title('5) y(t) = x(0.5t + 3)')
plt.grid(True)

plt.subplot(3,1,3)
plt.plot(t, y6)
plt.title('6) y(t) = x(t - 2) - t')
plt.grid(True)

plt.tight_layout()
plt.show()
     
